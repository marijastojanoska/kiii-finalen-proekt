create table public.app_user
(
    username            varchar(255) not null
        primary key,
    account_deactivated boolean      not null,
    email               varchar(255) not null
        constraint uk1j9d9a06i600gd43uu3km82jw
            unique,
    first_name          varchar(255),
    last_name           varchar(255),
    password            varchar(255) not null,
    role                varchar(255)
        constraint app_user_role_check
            check ((role)::text = ANY ((ARRAY ['USER'::character varying, 'ADMIN'::character varying])::text[]))
);

alter table public.app_user
    owner to postgres;

create table public.follow
(
    id          bigint generated by default as identity
        primary key,
    created_at  timestamp(6) not null,
    followed_id varchar(255) not null
        constraint fkop3i048mhc4evtp91jmg6xjgf
            references public.app_user,
    follower_id varchar(255) not null
        constraint fkavx0fwiga3lv4c1jf68g17002
            references public.app_user
);

alter table public.follow
    owner to postgres;

create table public.image
(
    id    bigint generated by default as identity
        primary key,
    image bytea        not null,
    name  varchar(255) not null,
    type  varchar(255) not null
);

alter table public.image
    owner to postgres;

create table public.notification
(
    id         bigint generated by default as identity
        primary key,
    created_at timestamp(6),
    message    varchar(255),
    read       boolean not null,
    user_id    varchar(255)
        constraint fkcxbqr6g1py0j4m9qeq44h1ju6
            references public.app_user
);

alter table public.notification
    owner to postgres;

create table public.post
(
    id         bigint generated by default as identity
        primary key,
    content    varchar(255) not null,
    created_at timestamp(6),
    image_id   bigint
        constraint ukqwq5kr1eoh86viudr15x567jm
            unique
        constraint fkqbitxio9e3gwkkkhjhtntf16v
            references public.image,
    user_id    varchar(255) not null
        constraint fk4p1xhm755mme4ykg5am4ati4r
            references public.app_user
);

alter table public.post
    owner to postgres;

create table public.comment
(
    id                bigint generated by default as identity
        primary key,
    content           varchar(255),
    created_at        timestamp(6),
    parent_comment_id bigint
        constraint fkhvh0e2ybgg16bpu229a5teje7
            references public.comment,
    post_id           bigint
        constraint fks1slvnkuemjsq2kj4h3vhx7i1
            references public.post,
    user_id           varchar(255)
        constraint fk37mjvnvpwbqdpewm39q75h9q
            references public.app_user
);

alter table public.comment
    owner to postgres;

create table public.reaction
(
    id         bigint generated by default as identity
        primary key,
    created_at timestamp(6),
    type       varchar(255)
        constraint reaction_type_check
            check ((type)::text = ANY
                   ((ARRAY ['LIKE'::character varying, 'HAPPY'::character varying, 'SAD'::character varying, 'ANGRY'::character varying])::text[])),
    post_id    bigint
        constraint fkathfhl7fif9f9mggdjhg7ktdt
            references public.post,
    user_id    varchar(255)
        constraint fkg11e2lis6q2ynh6o4g53ckt3f
            references public.app_user
);

alter table public.reaction
    owner to postgres;

create table public.tag
(
    id   bigint generated by default as identity
        primary key,
    name varchar(255)
);

alter table public.tag
    owner to postgres;

create table public.post_tags
(
    post_id bigint not null
        constraint fkmmtgl185ka210lj8kenewllt1
            references public.post,
    tag_id  bigint not null
        constraint fkp7cfgjsujc2vl3p88qfqkpws6
            references public.tag,
    primary key (post_id, tag_id)
);

alter table public.post_tags
    owner to postgres;

create table public.token
(
    id         bigint generated by default as identity
        primary key,
    expired    boolean not null,
    revoked    boolean not null,
    token      varchar(255),
    token_type varchar(255)
        constraint token_token_type_check
            check ((token_type)::text = 'BEARER'::text),
    username   varchar(255)
        constraint fkqxm1j2b5plnuwuguam9k790lg
            references public.app_user
);

alter table public.token
    owner to postgres;

create table public.user_profile
(
    id                 bigint generated by default as identity
        primary key,
    bio                varchar(255),
    created_at         timestamp(6),
    date_of_birth      date,
    profile_picture_id bigint
        constraint ukpe6msxnmkaixh849u4e5vqok2
            unique
        constraint fklhsqkuo6bo7nrd1pdf1v1su32
            references public.image,
    username           varchar(255)
        constraint uk9551piq2wp9kh4kket0wr65vt
            unique
        constraint fk56tqvkon2lxabcx5hsq2b0750
            references public.app_user
);

alter table public.user_profile
    owner to postgres;

